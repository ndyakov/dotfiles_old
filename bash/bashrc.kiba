# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc) # for examples

#figlet -w $(stty size | cut -d" " -f2) -c " -- ( " $(hostname) " ) -- "

# If not running interactively, don't do anything

case $- in
    *i*) ;;
      *) return;;
esac

fortune bg

#--- Colors ---

# Reset
Color_Off='\e[0m'       # Text Reset

# Regular Colors
Black='\e[0;30m'        # Black
Red='\e[0;31m'          # Red
Green='\e[0;32m'        # Green
Yellow='\e[0;33m'       # Yellow
Blue='\e[0;34m'         # Blue
Purple='\e[0;35m'       # Purple
Cyan='\e[0;36m'         # Cyan
White='\e[0;37m'        # White

# Bold
BBlack='\e[1;30m'       # Black
BRed='\e[1;31m'         # Red
BGreen='\e[1;32m'       # Green
BYellow='\e[1;33m'      # Yellow
BBlue='\e[1;34m'        # Blue
BPurple='\e[1;35m'      # Purple
BCyan='\e[1;36m'        # Cyan
BWhite='\e[1;37m'       # White


# Less colors and stuff
#export GREP_OPTIONS="--color=always"
export LESS=' -R '

# Less Colors for Man Pages
export LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold
export LESS_TERMCAP_me=$'\E[0m'           # end mode
export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
export LESS_TERMCAP_so=$'\E[38;5;246m'    # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'           # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;43m' # begin underline

# ---- History ----

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
shopt -s globstar

# set vi key bindings
set -o vi


# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
        color_prompt=yes
    else
        color_prompt=
    fi
fi

function prompt_left() {
    echo -e "${debian_chroot:+($debian_chroot)}\$(if [[ \$? == 0 ]]; then echo \"\[$BGreen\]\342\234\223\"; else echo \"\[$BRed\]\342\234\227\"; fi) \[$BWhite\]\u\[$BWhite\] : \[$BBlue\]\w \[$BPurple\]$(__git_ps1 " (%s)")"
}

function prompt_right() {
   echo -e "\[$White\][\[$White\]\D{%k:%M}\[$White\]]"
}

function prompt() {
    compensate=1
    PS1=$(printf "%*s\r%s\n\[$BBlue\]âžœ \[$Color_Off\] " "$(($(tput cols)+${compensate}))" "$(prompt_left)")
    PS1="$PS1"
}

if [ "$color_prompt" = yes ]; then
    PROMPT_COMMAND=prompt
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi

unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto -h'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi


#completions
source /home/ndyakov/.completion/p
source /home/ndyakov/.completion/afi

#module command
source /etc/profile.d/modules.sh
export MODULEPATH=/opt/modulefiles

# Env Variables
export EDITOR=vim
export GOPATH=/home/ndyakov/code/go
export GOROOT=/home/ndyakov/src/go

export PATH=$PATH:$HOME/bin:$GOPATH/bin:$GOROOT/bin

export PAGER="less"

# Physics bins
#export PATH=$PATH:/phys/Geant4/bin:/phys/ROOT/bin:/phys/CLHEP/bin:/phys/recpack

# Geant4
#source /phys/Geant4/bin/geant4.sh
#alias geant4.sh='/phys/Geant4/bin/geant4.sh'
# ROOT
#source /phys/ROOT/bin/thisroot.sh
#alias thisroot='/phys/ROOT/bin/thisroot.sh'

# --- Ruby stuff ---
export PATH=$PATH:/home/ndyakov/src/ruby/rbenv/bin
export PATH=/home/ndyakov/.rbenv/shims:$PATH
export RBENV_SHELL=bash
source '/home/ndyakov/src/ruby/rbenv/libexec/../completions/rbenv.bash'
rbenv rehash 2>/dev/null
rbenv() {
  local command
  command="$1"
  if [ "$#" -gt 0 ]; then
    shift
  fi

  case "$command" in
  rehash|shell)
    eval "`rbenv "sh-$command" "$@"`";;
  *)
    command rbenv "$command" "$@";;
  esac
}
